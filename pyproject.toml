[project]
name = "entropy-playground"
version = "0.1.0"
description = "GitHub-Native AI Coding Agent Framework for orchestrating autonomous AI development teams"
authors = [
    {name = "Entropy-Playground Contributors", email = "datablogin@users.noreply.github.com"}
]
readme = "readme.md"
license = {text = "MIT"}
requires-python = ">=3.11"
keywords = ["ai", "agents", "github", "automation", "development"]
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Version Control :: Git",
]

dependencies = [
    "click>=8.1.0",
    "pyyaml>=6.0",
    "pygithub>=2.0.0",
    "redis>=5.0.0",
    "httpx>=0.25.0",
    "pydantic>=2.0.0",
    "python-dotenv>=1.0.0",
    "structlog>=24.0.0",
    "rich>=13.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "mypy>=1.5.0",
    "ruff>=0.1.0",
    "black>=23.0.0",
    "pre-commit>=3.5.0",
    "types-PyYAML>=6.0.0",
    "types-redis>=4.6.0",
]

aws = [
    "boto3>=1.28.0",
    "botocore>=1.31.0",
]

[project.scripts]
entropy-playground = "entropy_playground.cli.main:cli"

[build-system]
requires = ["setuptools>=68.0", "setuptools-scm>=8.0"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["."]
include = ["entropy_playground*"]

[tool.ruff]
target-version = "py311"
line-length = 100

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "boto3",
    "botocore.*",
]
ignore_missing_imports = true

[tool.bandit]
exclude_dirs = ["tests", ".venv", "venv", ".tox", "build", "dist", ".github"]
skips = ["B101", "B404", "B603", "B106"]  # Skip assert_used, subprocess, hardcoded_password

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
addopts = "-v --cov=entropy_playground --cov-report=html --cov-report=term"

[tool.coverage.run]
source = ["entropy_playground"]
omit = ["*/tests/*", "*/test_*"]

[tool.black]
line-length = 100
target-version = ['py311']
include = '\.pyi?$'
